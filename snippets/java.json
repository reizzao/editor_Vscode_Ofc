{
	"test_PERSONAL_JAVA": {
		"prefix": "test_PERSONAL_JAVA",
		"body": [
			"package com.empresa.projetoum;",
			"",
			"import static org.assertj.core.api.Assertions.assertThat;",
			"",
			"@TestSpringClass",
			"class EntidadeTests {",
			"",
			"  Entidade sut = new Entidade();",
			"",
			"  @TestSpringSuite",
			"  void deve_() {",
			"    Entidade result = sut.execute();",
			"",
			"    assertThat(2).equals(2);",
			"    // assertThat(result.nome()).isNotNull();",
			"    // assertThat(result.nome()).hasToString(\"cli_2\");",
			"}",
			"",
			"}",
			"",
			""
		],
		"description": "test_PERSONAL_JAVA"
	},
	"test_SPRING_JAVA_Template": {
		"prefix": "test_SPRING_JAVA_Template",
		"body": [
			"import org.junit.jupiter.api.Test;",
			"import org.springframework.boot.test.context.SpringBootTest;",
			"",
			"@SpringBootTest",
			"class ProjetoumApplicationTests {",
			"",
			"@Test",
			"public void should_be_${1: action_entity} () {}",
			"",
			"}"
		],
		"description": "test_SPRING_JAVA_Template"
	},
	"parametro_em_anotacao_personal": {
		"prefix": "parametro_em_anotacao_personal",
		"body": [
			"@AliasFor(annotation = RequestMapping.class)",
			"String value() default \"\";"
		],
		"description": "parametro_em_anotacao_personal"
	},
	"lombok_Classe_Aux": {
  "prefix": "lombok_Classe_Aux",
  "body": [
    "import lombok.AllArgsConstructor;",
    "import lombok.Data;",
    "import lombok.NoArgsConstructor;",
    "",
    "@Data",
    "@AllArgsConstructor",
    "@NoArgsConstructor",
    "$1"
  ],
  "description": "lombok_Classe_Aux"
},
"spring_web_rest_CONTROLLER_Template": {
  "prefix": "spring_web_rest_CONTROLLER_Template",
  "body": [
    "import org.springframework.web.bind.annotation.RequestMapping;",
    "import org.springframework.web.bind.annotation.RestController;",
    "",
    "@RestController",
    "public class DepartamentoController {",
    "",
    "  @RequestMapping(value = \"/\")",
    "  public String ${1:METODO_ROTA}() {",
    "    return \"hello Word 12\";",
    "  }",
    "}"
  ],
  "description": "spring_web_rest_CONTROLLER_Template"
},
	"test_Junit_JAVA": {
		"prefix": "test_Junit_JAVA",
		"body": [
			"package com.empresa.projetoum;",
			"",
			"import org.junit.jupiter.api.Test;",
			"import org.springframework.boot.test.context.SpringBootTest;",
			"",
			"@SpringBootTest",
			"class ProjetoumApplicationTests {",
			"",
			"@Test",
			"  void ${1:nomeFuncao}() {}",
			"",
			"}"
		],
		"description": "test_Junit_JAVA"
	},
	"loop_ForEach": {
		"prefix": "loop_ForEach",
		"body": [
			"for (type var : array) {",
			"  statements using var;",
			"}"
		],
		"description": "loop_ForEach"
	},
	"divide_console": {
		"prefix": "divide_console",
		"body": [
			"System.out.println(\"------------------------------\");\n$1"
		],
		"description": "divide_console"
	},
	"for": {
		"prefix": "for",
		"body": [
			"for(${1:type} ${2:posicao}=0; ${2:posicao} < ${3:array}.length; ${2:posicao}++) {",
			"  ${3:array}[${2:posicao}];",
			"}"
		],
		"description": "for"
	},
	"toString_status_Console": {
		"prefix": "toString_status_Console",
		"body": [
			"@Override",
			"public String toString() {",
			"  return this.getClass().getName() + \": {\" + \"\\n\" +",
			"  \"  key: \" + this.atribute + \", \\n\" +",
			"  \"  key: \" + this.atribute + \", \\n\" +",
			"  \"  key: \" + this.atribute + \", \\n\" +",
			"  \"}\";",
			"}"
		],
		"description": "toString_status_Console"
	}

	// Place your snippets for java here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

}